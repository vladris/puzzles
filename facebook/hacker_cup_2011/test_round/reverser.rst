Reverser
========

You've intercepted a series of transmissions encrypted using an interesting and
stupid method, which you have managed to decipher. The messages contain only
spaces and lowercase English characters, and are encrypted as follows: for all
words in a sentence, the **i**\ th word (1-based) **word** is replaced with the
word generated by applying the following recursive operation
**f**\ (**word**, **i**):

::

    If the length of word is less than or equal to i, return word.
    Otherwise, return f(right half of word, i) + f(left half of word, i).

If **word** is of odd length, it is split such that the right side is longer.
You've decided to have a little fun with whoever is sending the messages, and
to broadcast your own messages encrypted in the same style that they are using.

Input
-----

Your input will begin with an integer **N**, followed by a newline and then
**N** test cases. Each case consists of an unencrypted sentence containing only
spaces and lowercase letters, and cases are newline-separated. There will be no
leading or trailing spaces in a sentence and there will be at most 1 space
character between any otherwise-adjacent characters

Output
------

Output, for each case and separated by newlines, the contents of the encrypted
sentence after applying the encoding method describe above to it. You may
ignore traditional capitalization rules and stick to all lowercase letters.

Constraints
-----------

5 ≤ **N** ≤ 25

Sentences will contain no more than 100 characters.

Example input
-------------

::

    5
    this is a short sentence
    this encryption is lame
    racecar
    test problems are pretty easy to solve
    q we rty uiop

Example output
--------------

::

    Case #1: siht is a ortsh encesent
    Case #2: siht oniptrycen is lame
    Case #3: racecar
    Case #4: tset msleobpr are ttypre easy to solve
    Case #5: q we rty uiop

`View online <https://www.facebook.com/hackercup/problems.php?pid=186256491392151&round=103456299728530>`_.
